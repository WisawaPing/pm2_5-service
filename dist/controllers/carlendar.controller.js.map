{"version":3,"sources":["../../src/controllers/carlendar.controller.js"],"names":["require","Op","Carlendar","db","include","create","req","res","body","status","send","response_status","message","data","err","updateIndex","items","item","id","index","update","where","result","console","log","findAll","carlendars","query","length","forEach","key","lang","searchGlobal","or","name_th","like","name_en","order","findOne","params","carlendar","dataValues","remove","destroy"],"mappings":"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","file":"carlendar.controller.js","sourcesContent":["import db from \"~/models\";\n\nconst { Op } = require(\"sequelize\");\n\nconst { Carlendar } = db;\nconst include = [];\n\nconst create = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const data = await Carlendar.create(req.body);\n    if (!data) {\n      res.send({\n        response_status: \"ERROR\",\n        message: err.message || \"Some error occurred while creating.\",\n      });\n      return;\n    }\n    res.status(201).send({\n      response_status: \"SUCCESS\",\n      data,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst updateIndex = async (req, res) => {\n  try {\n    const items = req.body;\n\n    for (const item of items) {\n      const { id, index } = item;\n\n      const result = await Carlendar.update(\n        { index },\n        {\n          where: { id },\n        }\n      );\n\n      console.log(\"result\", result);\n\n      if (result[0] !== 1) {\n        res.status(200).send({\n          response_status: \"ERROR\",\n          message: `(ID: ${id}) was not found.`,\n        });\n        return;\n      }\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Updated successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while updating.\",\n    });\n  }\n};\n\nconst findAll = async (req, res) => {\n  try {\n    let carlendars = [];\n    if (Object.keys(req.query).length > 0) {\n      let { query } = req;\n\n      let where = {};\n      Object.keys(req.query).forEach((key) => {\n        if (key === \"lang\") {\n          lang = req.query[key];\n          return;\n        }\n        where[key] = req.query[key];\n      });\n\n      if (query.searchGlobal) {\n        where = {};\n        where[Op.or] = [\n          {\n            name_th: {\n              [Op.like]: `%${query.searchGlobal}%`,\n            },\n          },\n          {\n            name_en: {\n              [Op.like]: `%${query.searchGlobal}%`,\n            },\n          },\n        ];\n      }\n\n      carlendars = await Carlendar.findAll({\n        order: [\n          [\"index\", \"ASC\"],\n          [\"createdAt\", \"DESC\"],\n        ],\n        where,\n      });\n    } else {\n      carlendars = await Carlendar.findAll({\n        order: [\n          [\"index\", \"ASC\"],\n          [\"createdAt\", \"DESC\"],\n        ],\n      });\n    }\n    res.send({\n      response_status: \"SUCCESS\",\n      data: carlendars,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message:\n        err.message || \"Some error occurred while retrieving the carlendars.\",\n    });\n  }\n};\n\nconst findOne = async (req, res) => {\n  try {\n    const id = req.params.id;\n    const carlendar = await Carlendar.findOne({\n      where: { id },\n    });\n    res.send({\n      response_status: \"SUCCESS\",\n      data: carlendar.dataValues,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message:\n        err.message || \"Some error occurred while retrieving the carlendar.\",\n    });\n  }\n};\n\nconst update = async (req, res) => {\n  try {\n    const { id } = req.params;\n\n    const result = await Carlendar.update(req.body, {\n      where: { id },\n    });\n\n    console.log(\"result\", result);\n\n    if (result != 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `(ID: ${id}) was not found.`,\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Updated successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while updating.\",\n    });\n  }\n};\n\nconst remove = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const result = await Carlendar.destroy({ where: { id } });\n    if (result !== 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `Log (ID: ${id}) was not found.`,\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Deleted successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while deleting.\",\n    });\n  }\n};\n\nexport default {\n  create,\n  findAll,\n  updateIndex,\n  findOne,\n  update,\n  remove,\n};\n"]}