{"version":3,"sources":["../../src/controllers/priceCourse.controller.js"],"names":["PriceCourse","db","PriceItem","Course","TypeCourse","include","model","createForm5","req","res","body","status","send","response_status","message","priceCourse","courseId","iterator","priceItems","create","iteratorRes","payload","map","value","priceCourseId","id","bulkCreate","priceItemsRes","updateForm5","update","where","dataValues","idPriceItem","iteratorPriceItemsRes","deleteForm5","params","findAll","result","price_items","destroy","data","err","findAllForm5","findByPk","courseRes","query","offset","limit","page","Number","order","resultRes","newResultRes","forEach","element","push","console","log","findOne","remove"],"mappings":"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","file":"priceCourse.controller.js","sourcesContent":["import db from \"~/models\";\n\nconst { PriceCourse, PriceItem, Course, TypeCourse } = db;\nconst include = [\n  {\n    model: PriceItem,\n    include: [TypeCourse],\n  },\n  Course,\n];\n\nconst createForm5 = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const { priceCourse, courseId } = req.body;\n\n    for (const iterator of priceCourse) {\n      const { priceItems } = iterator;\n\n      const iteratorRes = await PriceCourse.create({\n        ...iterator,\n        courseId,\n      });\n\n      const payload = priceItems.map((value) => ({\n        ...value,\n        priceCourseId: iteratorRes.id,\n      }));\n\n      const priceItemsRes = await PriceItem.bulkCreate(payload);\n    }\n\n    // if (!priceItemsRes) {\n    //   res.send({\n    //     response_status: \"ERROR\",\n    //     message: err.message || \"Some error occurred while creating.\",\n    //   });\n    //   return;\n    // }\n\n    res.status(201).send({\n      response_status: \"SUCCESS\",\n      // data: priceItemsRes,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst updateForm5 = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const { priceCourse, courseId } = req.body;\n\n    for (const iterator of priceCourse) {\n      const { priceItems } = iterator;\n      let id = null;\n      id = iterator.id;\n\n      if (id) {\n        const iteratorRes = await PriceCourse.update(\n          {\n            ...iterator,\n            courseId,\n          },\n          {\n            where: { id },\n          }\n        );\n      } else {\n        const iteratorRes = await PriceCourse.create({\n          ...iterator,\n          courseId,\n        });\n        id = iteratorRes.dataValues.id;\n      }\n\n      for (const iterator of priceItems) {\n        // const { id } = iterator;\n        let idPriceItem = iterator.id;\n        if (idPriceItem) {\n          const iteratorPriceItemsRes = await PriceItem.update(\n            {\n              ...iterator,\n            },\n            {\n              where: { id: idPriceItem },\n            }\n          );\n        } else {\n          const iteratorPriceItemsRes = await PriceItem.create({\n            ...iterator,\n            priceCourseId: id,\n          });\n        }\n      }\n\n      // const priceItemsRes = await PriceItem.bulkCreate(payload);\n    }\n\n    res.status(200).send({\n      response_status: \"SUCCESS\",\n      // data: priceItemsRes,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst deleteForm5 = async (req, res) => {\n  try {\n    const { courseId } = req.params;\n    const result = await PriceCourse.findAll({\n      where: { courseId },\n      include: [PriceItem],\n    });\n\n    for (const iterator of result) {\n      const price_items = iterator.price_items ? iterator.price_items : [];\n\n      for (const iterator of price_items) {\n        const { id } = iterator;\n        await PriceItem.destroy({\n          where: { id },\n        });\n      }\n    }\n\n    await PriceCourse.destroy({\n      where: { courseId },\n    });\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Deleted successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while deleting.\",\n    });\n  }\n};\n\nconst create = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const data = await PriceCourse.create(req.body);\n    if (!data) {\n      res.send({\n        response_status: \"ERROR\",\n        message: err.message || \"Some error occurred while creating.\",\n      });\n      return;\n    }\n    res.status(201).send({\n      response_status: \"SUCCESS\",\n      data,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst findAllForm5 = async (req, res) => {\n  try {\n    const { courseId } = req.params;\n\n    const courseRes = await Course.findByPk(courseId);\n\n    if (!courseRes) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    let { query } = req;\n    let { offset, limit, page } = query;\n    if (offset || limit || page) {\n      delete query.offset;\n      delete query.limit;\n      delete query.page;\n      offset = offset ? Number(offset) : null;\n      limit = limit ? Number(limit) : null;\n      if (page) {\n        offset = page ? Number(page) : null;\n      }\n    }\n    const where = query ? { ...query, courseId } : { courseId };\n    const resultRes = await PriceCourse.findAll({\n      limit,\n      offset,\n      where,\n      include,\n      order: [\n        [\"createdAt\", \"ASC\"],\n        [\"id\", \"ASC\"],\n      ],\n    });\n\n    if (!resultRes) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: err.message || \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    let newResultRes = [];\n\n    resultRes.forEach((element) => {\n      const { price_items } = element;\n      let payload = { ...element.dataValues, priceItems: price_items };\n      delete payload.price_items;\n      newResultRes.push(payload);\n    });\n\n    console.log(\"resultRes\", resultRes);\n\n    res.status(200).send({\n      response_status: \"SUCCESS\",\n      data: newResultRes,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while finding.\",\n    });\n  }\n};\n\nconst findAll = async (req, res) => {\n  try {\n    let { query } = req;\n    let { offset, limit, page } = query;\n    if (offset || limit || page) {\n      delete query.offset;\n      delete query.limit;\n      delete query.page;\n      offset = offset ? Number(offset) : null;\n      limit = limit ? Number(limit) : null;\n      if (page) {\n        offset = page ? Number(page) : null;\n      }\n    }\n    const where = query ? query : {};\n    const resultRes = await PriceCourse.findAll({\n      limit,\n      offset,\n      where,\n      include,\n      order: [\n        [\"createdAt\", \"DESC\"],\n        [\"id\", \"DESC\"],\n      ],\n    });\n\n    if (!resultRes) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: err.message || \"Some error occurred while finding.\",\n      });\n      return;\n    }\n    res.status(200).send({\n      response_status: \"SUCCESS\",\n      data: resultRes,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while finding.\",\n    });\n  }\n};\n\nconst findOne = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const data = await PriceCourse.findByPk(id, { include });\n    // console.log(\"data\", data);\n\n    if (!data) {\n      res.send({\n        response_status: \"ERROR\",\n        message: \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      data: data,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while finding.\",\n    });\n  }\n};\n\nconst update = async (req, res) => {\n  try {\n    const { id } = req.params;\n\n    const result = await PriceCourse.update(req.body, {\n      where: { id },\n    });\n\n    console.log(\"result\", result);\n\n    if (result != 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `(ID: ${id}) was not found.`,\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Updated successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while updating.\",\n    });\n  }\n};\n\nconst remove = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const result = await PriceCourse.destroy({\n      where: { id },\n    });\n\n    if (result !== 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `Log (ID: ${id}) was not found.`,\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Deleted successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while deleting.\",\n    });\n  }\n};\n\nexport default {\n  create,\n  findAll,\n  findOne,\n  update,\n  remove,\n  createForm5,\n  findAllForm5,\n  updateForm5,\n  deleteForm5,\n};\n"]}