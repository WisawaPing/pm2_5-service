{"version":3,"sources":["../../src/controllers/course.controller.js"],"names":["include","require","Op","Course","db","Semester","StudyDayTime","create","req","res","body","status","send","response_status","message","data","err","updateForm6","id","job_opportunities_th","job_opportunities_en","img_url","showImage","semesters","study_day_times","courseId","findByPk","courseResById","payloadCourseUpdate","img_url_more_detail","show_image_more_detail","job_opportunities_th_more_detail","job_opportunities_en_more_detail","update","where","resultUpdate","iterator","createForm6","payloadSemester","map","value","payloadStudyDayTime","bulkCreate","semesterRes","studyDayTimeRes","findOneForm6","params","includeForm6","form6","updateIndex","items","item","index","result","console","log","findAll","query","offset","limit","page","Number","searchGlobal","or","title_th","like","title_en","order","resultRes","findOne","remove","destroy"],"mappings":"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","file":"course.controller.js","sourcesContent":["const include = [\"facualty\", \"level\", \"major\"];\n\nconst { Op } = require(\"sequelize\");\nimport db from \"~/models\";\n\nconst { Course, Semester, StudyDayTime } = db;\n\nconst create = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const data = await Course.create(req.body);\n    if (!data) {\n      res.send({\n        response_status: \"ERROR\",\n        message: err.message || \"Some error occurred while creating.\",\n      });\n      return;\n    }\n    res.status(201).send({\n      response_status: \"SUCCESS\",\n      data,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst updateForm6 = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const {\n      id,\n      job_opportunities_th,\n      job_opportunities_en,\n      img_url,\n      showImage,\n      semesters,\n      study_day_times,\n      courseId,\n    } = req.body;\n\n    const courseResById = await Course.findByPk(id);\n\n    if (!courseResById) {\n      res.send({\n        response_status: \"ERROR\",\n        message: \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    const payloadCourseUpdate = {\n      img_url_more_detail: img_url,\n      show_image_more_detail: showImage,\n      job_opportunities_th_more_detail: job_opportunities_th,\n      job_opportunities_en_more_detail: job_opportunities_en,\n    };\n\n    const resultUpdate = await Course.update(payloadCourseUpdate, {\n      where: { id },\n    });\n\n    for (const iterator of semesters) {\n      const { id } = iterator;\n      if (id) {\n        await Semester.update(iterator, {\n          where: { id },\n        });\n      } else {\n        await Semester.create({\n          ...iterator,\n          courseId,\n        });\n      }\n    }\n\n    for (const iterator of study_day_times) {\n      const { id } = iterator;\n\n      if (id) {\n        await StudyDayTime.update(iterator, {\n          where: { id },\n        });\n      } else {\n        await StudyDayTime.create({\n          ...iterator,\n          courseId,\n        });\n      }\n    }\n\n    res.status(200).send({\n      response_status: \"SUCCESS\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst createForm6 = async (req, res) => {\n  try {\n    // Validate request\n    if (!req.body) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: \"Content can not be empty!\",\n      });\n      return;\n    }\n\n    const {\n      courseId,\n      job_opportunities_th,\n      job_opportunities_en,\n      img_url,\n      showImage,\n      semesters,\n      study_day_times,\n    } = req.body;\n\n    const courseResById = await Course.findByPk(courseId);\n\n    if (!courseResById) {\n      res.send({\n        response_status: \"ERROR\",\n        message: \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    const payloadCourseUpdate = {\n      img_url_more_detail: img_url,\n      show_image_more_detail: showImage,\n      job_opportunities_th_more_detail: job_opportunities_th,\n      job_opportunities_en_more_detail: job_opportunities_en,\n    };\n\n    const resultUpdate = await Course.update(payloadCourseUpdate, {\n      where: { id: courseId },\n    });\n\n    if (resultUpdate != 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `(courseId: ${courseId}) was not found.`,\n      });\n      return;\n    }\n\n    const payloadSemester = semesters.map((value) => ({\n      ...value,\n      courseId,\n    }));\n    const payloadStudyDayTime = study_day_times.map((value) => ({\n      ...value,\n      courseId,\n    }));\n\n    const semesterRes = await Semester.bulkCreate(payloadSemester);\n    const studyDayTimeRes = await StudyDayTime.bulkCreate(payloadStudyDayTime);\n\n    res.status(201).send({\n      response_status: \"SUCCESS\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while creating.\",\n    });\n  }\n};\n\nconst findOneForm6 = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const includeForm6 = [Semester, StudyDayTime];\n    const data = await Course.findByPk(id, { include: includeForm6 });\n    // console.log(\"data\", data);\n\n    if (!data) {\n      res.send({\n        response_status: \"ERROR\",\n        message: \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    const {\n      semesters,\n      study_day_times,\n      img_url_more_detail,\n      show_image_more_detail,\n      job_opportunities_th_more_detail,\n      job_opportunities_en_more_detail,\n    } = data;\n\n    const form6 = {\n      id: data.id,\n      img_url: img_url_more_detail,\n      showImage: show_image_more_detail,\n      job_opportunities_th: job_opportunities_th_more_detail,\n      job_opportunities_en: job_opportunities_en_more_detail,\n      semesters,\n      study_day_times,\n    };\n\n    res.send({\n      response_status: \"SUCCESS\",\n      form6,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while finding.\",\n    });\n  }\n};\n\nconst updateIndex = async (req, res) => {\n  try {\n    const items = req.body;\n\n    for (const item of items) {\n      const { id, index } = item;\n\n      const result = await Course.update(\n        { index },\n        {\n          where: { id },\n        }\n      );\n\n      console.log(\"result\", result);\n\n      if (result[0] !== 1) {\n        res.status(200).send({\n          response_status: \"ERROR\",\n          message: `(ID: ${id}) was not found.`,\n        });\n        return;\n      }\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Updated successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while updating.\",\n    });\n  }\n};\n\nconst findAll = async (req, res) => {\n  try {\n    let { query } = req;\n    let { offset, limit, page } = query;\n    if (offset || limit || page) {\n      delete query.offset;\n      delete query.limit;\n      delete query.page;\n      offset = offset ? Number(offset) : null;\n      limit = limit ? Number(limit) : null;\n      if (page) {\n        offset = page ? Number(page) : null;\n      }\n    }\n    let where = query ? query : {};\n\n    if (query.searchGlobal) {\n      where = {};\n      where[Op.or] = [\n        {\n          title_th: {\n            [Op.like]: `%${query.searchGlobal}%`,\n          },\n        },\n        {\n          title_en: {\n            [Op.like]: `%${query.searchGlobal}%`,\n          },\n        },\n      ];\n    }\n\n    const resultRes = await Course.findAll({\n      limit,\n      offset,\n      where,\n      include,\n      order: [\n        [\"index\", \"ASC\"],\n        [\"createdAt\", \"DESC\"],\n      ],\n    });\n\n    console.log(\"query \", query);\n    // console.log(\"limit \", limit);\n    // console.log(\"offset \", offset);\n\n    if (!resultRes) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: err.message || \"Some error occurred while finding.\",\n      });\n      return;\n    }\n    res.status(200).send({\n      response_status: \"SUCCESS\",\n      data: resultRes,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while finding.\",\n    });\n  }\n};\n\nconst findOne = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const data = await Course.findByPk(id, { include });\n    // console.log(\"data\", data);\n\n    if (!data) {\n      res.send({\n        response_status: \"ERROR\",\n        message: \"Some error occurred while finding.\",\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      data: data,\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while finding.\",\n    });\n  }\n};\n\nconst update = async (req, res) => {\n  try {\n    const { id } = req.params;\n\n    const result = await Course.update(req.body, {\n      where: { id },\n    });\n\n    console.log(\"result\", result);\n\n    if (result != 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `(ID: ${id}) was not found.`,\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Updated successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while updating.\",\n    });\n  }\n};\n\nconst remove = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const result = await Course.destroy({\n      where: { id },\n    });\n\n    if (result !== 1) {\n      res.status(200).send({\n        response_status: \"ERROR\",\n        message: `Log (ID: ${id}) was not found.`,\n      });\n      return;\n    }\n\n    res.send({\n      response_status: \"SUCCESS\",\n      message: \"Deleted successfully\",\n    });\n  } catch (err) {\n    res.send({\n      response_status: \"ERROR\",\n      message: err.message || \"Some error occurred while deleting.\",\n    });\n  }\n};\n\nexport default {\n  create,\n  findAll,\n  updateIndex,\n  findOne,\n  update,\n  remove,\n  createForm6,\n  findOneForm6,\n  updateForm6,\n};\n"]}