{"version":3,"sources":["../../src/helpers/runningNumber.js"],"names":["pad_with_zeroes","number","lenght","my_string","length","Model","RunningNumber","modelName","body","reqData","findOne","where","runningDate","Date","requestType","runningNumber","currentRunningNumber","create","newNumberDate","dataValues","runningDateStr","getFullYear","getMonth","getDate","console","log","request_no","data","update"],"mappings":";;;;;;;;;;;;;;;;AAAA,IAAMA,kBAAkB,SAAlBA,eAAkB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC1C,MAAIC,YAAY,KAAKF,MAArB;AACA,SAAOE,UAAUC,MAAV,GAAmBF,MAA1B,EAAkC;AAChCC,gBAAY,MAAMA,SAAlB;AACD;;AAED,SAAOA,SAAP;AACD,CAPD;;;sFASe,iBAAOE,KAAP,EAAcC,aAAd,EAA6BC,SAA7B,EAAwCC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,mBADS,GACCD,IADD;AAAA;AAAA,mBAEeF,cAAcI,OAAd,CAAsB;AAChDC,qBAAO,EAAEC,aAAa,IAAIC,IAAJ,EAAf,EAA2BC,aAAaP,SAAxC;AADyC,aAAtB,CAFf;;AAAA;AAEPQ,yBAFO;AAKTC,gCALS;;AAAA,gBAMRD,aANQ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOiBT,cAAcW,MAAd,CAAqB;AAC/CF,6BAAe,CADgC;AAE/CH,2BAAa,IAAIC,IAAJ,EAFkC;AAG/CC,2BAAaP;AAHkC,aAArB,CAPjB;;AAAA;AAOLW,yBAPK;;;AAaXF,mCAAuBE,cAAcC,UAAd,CAAyBJ,aAAhD;AAbW;AAAA;;AAAA;AAeXC,mCAAuBD,cAAcI,UAAd,CAAyBJ,aAAhD;;AAfW;;AAkBb;AACIH,uBAnBS,GAmBK,IAAIC,IAAJ,EAnBL;AAoBTO,0BApBS,GAqBXR,YAAYS,WAAZ,KACA,EADA,GAEArB,gBAAgBY,YAAYU,QAAZ,KAAyB,CAAzC,EAA4C,CAA5C,CAFA,GAGA,EAHA,GAIAtB,gBAAgBY,YAAYW,OAAZ,EAAhB,EAAuC,CAAvC,CAJA,GAKA,EALA,GAMAvB,gBAAgBgB,oBAAhB,EAAsC,CAAtC,CA3BW;;AA4BbQ,oBAAQC,GAAR,CAAYL,cAAZ;;AAEAX,oBAAQiB,UAAR,GAAqBN,cAArB;;AA9Ba;AAAA,mBAgCMf,MAAMY,MAAN,CAAaR,OAAb,CAhCN;;AAAA;AAgCPkB,gBAhCO;AAAA;AAAA,mBAkCPrB,cAAcsB,MAAd,CACJ,EAAEb,eAAeC,uBAAuB,CAAxC,EADI,EAEJ,EAAEL,OAAO,EAAEC,aAAa,IAAIC,IAAJ,EAAf,EAA2BC,aAAaP,SAAxC,EAAT,EAFI,CAlCO;;AAAA;AAAA,6CAuCNoB,IAvCM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"runningNumber.js","sourcesContent":["const pad_with_zeroes = (number, lenght) => {\n  var my_string = \"\" + number;\n  while (my_string.length < lenght) {\n    my_string = \"0\" + my_string;\n  }\n\n  return my_string;\n};\n\nexport default async (Model, RunningNumber, modelName, body) => {\n  let reqData = body;\n  const runningNumber = await RunningNumber.findOne({\n    where: { runningDate: new Date(), requestType: modelName },\n  });\n  let currentRunningNumber;\n  if (!runningNumber) {\n    const newNumberDate = await RunningNumber.create({\n      runningNumber: 1,\n      runningDate: new Date(),\n      requestType: modelName,\n    });\n\n    currentRunningNumber = newNumberDate.dataValues.runningNumber;\n  } else {\n    currentRunningNumber = runningNumber.dataValues.runningNumber;\n  }\n\n  // await RunningNumber.update({ runningNumber: currentRunningNumber + 1 }, { where: { runningDate: new Date() } })\n  var runningDate = new Date();\n  var runningDateStr =\n    runningDate.getFullYear() +\n    \"\" +\n    pad_with_zeroes(runningDate.getMonth() + 1, 2) +\n    \"\" +\n    pad_with_zeroes(runningDate.getDate(), 2) +\n    \"\" +\n    pad_with_zeroes(currentRunningNumber, 6);\n  console.log(runningDateStr);\n\n  reqData.request_no = runningDateStr;\n\n  const data = await Model.create(reqData);\n\n  await RunningNumber.update(\n    { runningNumber: currentRunningNumber + 1 },\n    { where: { runningDate: new Date(), requestType: modelName } }\n  );\n\n  return data;\n};\n"]}