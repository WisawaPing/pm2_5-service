{"version":3,"sources":["../../src/middleware/auth.js"],"names":["User","db","req","res","next","headers","authorization","status","json","message","token","split","decodedToken","jwt","verify","hash","jwtSecret","userId","id","foundUser","findOne","where","err"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAOC,iBAAGD,IAAhB;;kBAEe,UAACE,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACjC,MAAI,CAACF,IAAIG,OAAJ,CAAYC,aAAjB,EAAgC;AAC9BH,QAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,eAAS;AADU,KAArB;AAGD,GAJD,MAIO;AACL,QAAI;AACF,UAAMC,QAAQR,IAAIG,OAAJ,CAAYC,aAAZ,CAA0BK,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAd;AACA,UAAMC,eAAeC,uBAAIC,MAAJ,CAAWJ,KAAX,EAAkBK,eAAKC,SAAvB,CAArB;AACA,UAAMC,SAASL,aAAaM,EAA5B;AACA,UAAMC,YAAYnB,KAAKoB,OAAL,CAAa,EAAEC,OAAO,EAAEH,IAAID,MAAN,EAAT,EAAb,CAAlB;;AAEA;;AAEA,UAAI,CAACE,SAAL,EAAgB;AACd,cAAM,eAAN;AACD,OAFD,MAEO;AACLf;AACD;AACF,KAbD,CAaE,OAAOkB,GAAP,EAAY;AACZnB,UAAII,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBC,iBAASa;AADU,OAArB;AAGD;AACF;AACF,C","file":"auth.js","sourcesContent":["import hash from \"~/config/hash\";\nimport jwt from \"jsonwebtoken\";\nimport db from \"~/models\";\n\nconst User = db.User;\n\nexport default (req, res, next) => {\n  if (!req.headers.authorization) {\n    res.status(401).json({\n      message: \"Unauthorized\",\n    });\n  } else {\n    try {\n      const token = req.headers.authorization.split(\" \")[1];\n      const decodedToken = jwt.verify(token, hash.jwtSecret);\n      const userId = decodedToken.id;\n      const foundUser = User.findOne({ where: { id: userId } });\n\n      //   console.log(\"token : \", token);\n\n      if (!foundUser) {\n        throw \"Invalid token\";\n      } else {\n        next();\n      }\n    } catch (err) {\n      res.status(401).json({\n        message: err,\n      });\n    }\n  }\n};\n"]}