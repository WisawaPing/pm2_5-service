{"version":3,"sources":["../src/index.js"],"names":["app","use","bodyParser","json","limit","urlencoded","extended","db","sequelize","sync","get","req","res","message","next","createError","err","locals","error","status","render","PORT","process","env","listen","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AACA;AACA;;AAEA,IAAMA,MAAM,wBAAZ;;AAEA;AACA;AACA;AACAA,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQ,4BAAR;;AAEA;AACAD,IAAIC,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB,EAAEC,OAAO,MAAT,EAAhB,CAAR;;AAEA;AACAJ,IAAIC,GAAJ,CAAQC,qBAAWG,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;;AAEAC,iBAAGC,SAAH,CAAaC,IAAb;;AAEA;AACAT,IAAIU,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,MAAIT,IAAJ,CAAS,EAAEU,SAAS,oBAAX,EAAT;AACD,CAFD;;AAKAb,IAAIC,GAAJ,CAAQ,kCAAR;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,sBAAOD,GAAP;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,UAACU,GAAD,EAAMC,GAAN,EAAWE,IAAX,EAAoB;AAC1BA,OAAKC,YAAY,GAAZ,CAAL;AACD,CAFD;;AAIA;AACAf,IAAIC,GAAJ,CAAQ,UAACe,GAAD,EAAML,GAAN,EAAWC,GAAX,EAAgBE,IAAhB,EAAyB;AAC/B;AACAF,MAAIK,MAAJ,CAAWJ,OAAX,GAAqBG,IAAIH,OAAzB;AACAD,MAAIK,MAAJ,CAAWC,KAAX,GAAmBP,IAAIX,GAAJ,CAAQU,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCM,GAAvC,GAA6C,EAAhE;;AAEA;AACAJ,MAAIO,MAAJ,CAAWH,IAAIG,MAAJ,IAAc,GAAzB;AACAP,MAAIQ,MAAJ,CAAW,OAAX;AACD,CARD;;AAUA;AACA,IAAMC,OAAOC,QAAQC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACArB,IAAIwB,MAAJ,CAAWH,IAAX,EAAiB,YAAM;AACrBI,UAAQC,GAAR,gCAAyCL,IAAzC;AACD,CAFD","file":"index.js","sourcesContent":["import express from \"express\";\nimport bodyParser from \"body-parser\";\nimport cors from \"cors\";\nimport db from \"~/models\";\nimport routes from \"~/routes\";\nimport compression from \"compression\";\nimport fileUpload from \"express-fileupload\";\n// import createError from \"http-errors\";\n// import path from \"path\";\n\nconst app = express();\n\n// var corsOptions = {\n//   origin: 'http://localhost:8080'\n// };\napp.use(cors());\napp.use(compression());\n\n// parse requests of content-type - application/json\napp.use(bodyParser.json({ limit: \"10mb\" }));\n\n// parse requests of content-type - application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: true }));\n\ndb.sequelize.sync();\n\n// simple route\napp.get(\"/\", (req, res) => {\n  res.json({ message: \"Gscm Service API !\" });\n});\n\n\napp.use(fileUpload());\n\n// app.use(express.static(\"public\"));\n\n// view engine setup\n// app.set(\"views\", path.join(__dirname, \"views\"));\n// app.set(\"view engine\", \"ejs\");\n// app.use(express.static(path.join(__dirname, \"public\")));\n\nroutes(app);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  next(createError(404));\n});\n\n// // error handler\napp.use((err, req, res, next) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get(\"env\") === \"development\" ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render(\"error\");\n});\n\n// set port, listen for requests\nconst PORT = process.env.PORT || 8081;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}.`);\n});\n"]}